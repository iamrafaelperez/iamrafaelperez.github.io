{"version":3,"sources":["src/app/components/backdrop/backdrop.ts","src/app/components/modal/Modal.ts","src/app/components/modal/services/modal-controller.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { ComponentFactoryResolver, Injector, ApplicationRef } from '@angular/core';\r\nimport { BackdropComponent } from './backdrop.component';\r\n\r\n\r\nexport class Backdrop {\r\n    createBackdrop(\r\n      componentFactoryResolver: ComponentFactoryResolver, \r\n      injector: Injector) {\r\n      \r\n        var backdropRef = componentFactoryResolver\r\n          .resolveComponentFactory(BackdropComponent)\r\n          .create(injector);\r\n  \r\n        return backdropRef;\r\n  \r\n      }\r\n    \r\n}","import { ModalOptions } from './models/ModalOptions';\r\nimport { ComponentRef, ApplicationRef, Injector, ComponentFactoryResolver, EmbeddedViewRef } from '@angular/core';\r\nimport { ModalComponent } from './modal.component';\r\nimport { Backdrop } from '../backdrop/backdrop';\r\nimport { BackdropComponent } from '../backdrop/backdrop.component';\r\nimport { ModalControllerService } from './services/modal-controller.service';\r\n\r\nexport class Modal extends Backdrop {\r\n\r\n  public id: string | number;\r\n\r\n  private _controller: ModalControllerService;\r\n\r\n  private _componentFactoryResolver: ComponentFactoryResolver;\r\n  private _injector: Injector;\r\n  private _applicationRef: ApplicationRef;\r\n\r\n  private _modaOptions: ModalOptions;\r\n\r\n  private _backdropRef: ComponentRef<BackdropComponent>;\r\n  private _modalRef: ComponentRef<ModalComponent>;\r\n  private _componentRef: ComponentRef<any>;\r\n  \r\n  private _modalElement: HTMLElement;\r\n  private _modalContainerElement: HTMLElement;\r\n  private _modalContentElement: HTMLElement;\r\n  private _componentElement: HTMLElement;\r\n  private _backdropElement: HTMLElement;\r\n\r\n  constructor(\r\n    controller: ModalControllerService,\r\n        componentFactoryResolver: ComponentFactoryResolver,\r\n        injector: Injector,\r\n        applicationRef: ApplicationRef,\r\n        modalOptions: ModalOptions) {\r\n        super();\r\n        \r\n        this._controller = controller;\r\n        this._componentFactoryResolver = componentFactoryResolver;\r\n        this._injector = injector;\r\n        this._applicationRef = applicationRef;\r\n        this._modaOptions = modalOptions;\r\n    \r\n    this.createReference();\r\n    this.attachOption();\r\n    this.attachReferenceToApplicationRef();\r\n    this.createElement();\r\n  }\r\n\r\n  open() {\r\n    this.attachModalToDOM();\r\n    if(this._modaOptions.animate) this._modalRef.instance.openAnimate(this._modalContainerElement);\r\n  }\r\n\r\n  close() {\r\n    this._controller.remove(this.id);\r\n    if(this._modaOptions.animate) {\r\n      this._modalRef.instance.closeAnimate(this._modalContainerElement)\r\n        .then(_ => this._modalRef.destroy());\r\n    }\r\n    else this._modalRef.destroy();\r\n  }\r\n\r\n  private createReference() {\r\n    this._modalRef = this._componentFactoryResolver\r\n      .resolveComponentFactory(ModalComponent)\r\n      .create(this._injector);\r\n\r\n    this._componentRef = this._componentFactoryResolver\r\n      .resolveComponentFactory(this._modaOptions.component)\r\n      .create(this._injector);\r\n\r\n    this._backdropRef = this.createBackdrop(this._componentFactoryResolver, this._injector);\r\n\r\n    this._modalRef.instance.closeModal.subscribe(_ => this.close());\r\n    this._backdropRef.instance.closeComponent.subscribe(_ => this.close());\r\n\r\n  }\r\n\r\n  private  attachOption() {\r\n    this._modalRef.instance.header = this._modaOptions.header;\r\n    this._modalRef.instance.footer = this._modaOptions.footer;\r\n    this._modalRef.instance.showHeader = this._modaOptions.showHeader;\r\n    var instance = this._componentRef.instance;\r\n    Object.assign(instance, this._modaOptions.props);\r\n    this.id = this._modaOptions.id;\r\n  }\r\n\r\n  private attachReferenceToApplicationRef() {\r\n    this._applicationRef.attachView(this._modalRef.hostView);\r\n    this._applicationRef.attachView(this._componentRef.hostView);\r\n  }\r\n\r\n  private createElement() {\r\n    this._modalElement = (this._modalRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\r\n    this._modalContainerElement = this._modalElement.querySelector('.modal-container');\r\n    this._modalContentElement = this._modalElement.querySelector('.modal-content');\r\n    this._componentElement = (this._componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\r\n    this._backdropElement = (this._backdropRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\r\n  }\r\n\r\n  private attachModalToDOM() {\r\n    this._modalElement.prepend(this._backdropElement);\r\n    this._modalContentElement.appendChild(this._componentElement);\r\n    document.body.appendChild(this._modalElement);\r\n  }\r\n}","import { Injectable, Injector, ApplicationRef, ComponentFactoryResolver, EmbeddedViewRef, ComponentRef } from '@angular/core';\nimport { ModalComponent } from '../modal.component';\nimport { BackdropControllerService } from '../../backdrop/service/backdrop-controller.service';\nimport { ModalOptions } from '../models/ModalOptions';\nimport { BackdropComponent } from '../../backdrop/backdrop.component';\nimport { Modal } from '../Modal';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalControllerService {\n\n  private _modals: Modal[] = [];\n\n  constructor(\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _injector: Injector,\n    private _applicationRef: ApplicationRef) { }\n\n  ngOnInit() {\n  }\n\n  create(modalOptions: ModalOptions) {\n\n    var controller = this;\n\n    var modal = new Modal(\n      controller,\n      this._componentFactoryResolver, \n      this._injector, \n      this._applicationRef, \n      modalOptions\n    )\n\n    this._modals.push(modal);\n  }\n\n  open(id: string | number) {\n    var modal = this.find(id);\n\n    if(modal) {\n      modal.open();\n    }\n  }\n\n  close(id: string | number) {\n    var modal = this.find(id);\n    this.remove(id);\n\n    if(modal) {\n      modal.close();\n    }\n  }\n\n  find(id: string | number) {\n    return this._modals.filter(modal => modal.id === id)[0];\n  }\n\n  remove(id: string | number) {\n    this._modals = this._modals\n      .filter(modal => modal.id != id);\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"common-es5.js"}